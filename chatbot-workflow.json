{
  "name": "Simple AI Chatbot",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "chat",
        "options": {
          "rawBody": true
        }
      },
      "id": "webhook-node",
      "name": "When chat message received",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [240, 300],
      "webhookId": "your-webhook-id"
    },
    {
      "parameters": {
        "jsCode": "// Extrahiere die Nachricht aus dem Request\nconst body = $input.item.json.body;\nlet chatInput = '';\n\n// Parse den Body falls es ein String ist\nif (typeof body === 'string') {\n  try {\n    const parsed = JSON.parse(body);\n    chatInput = parsed.chatInput || '';\n  } catch (e) {\n    chatInput = body;\n  }\n} else {\n  chatInput = body?.chatInput || $input.item.json.chatInput || '';\n}\n\n// Erstelle eine einfache Test-Antwort\nreturn {\n  output: `Du hast geschrieben: \"${chatInput}\". Dies ist eine einfache Test-Antwort. Dein Chatbot funktioniert! ðŸŽ‰`,\n  chatInput: chatInput,\n  timestamp: new Date().toISOString()\n};"
      },
      "id": "code-node",
      "name": "Process Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Access-Control-Allow-Origin",
                "value": "*"
              },
              {
                "name": "Access-Control-Allow-Methods",
                "value": "POST, GET, OPTIONS"
              },
              {
                "name": "Access-Control-Allow-Headers",
                "value": "Content-Type"
              }
            ]
          }
        }
      },
      "id": "respond-node",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [680, 300]
    }
  ],
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Process Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Message": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-10-07T12:00:00.000Z",
  "versionId": "1"
}